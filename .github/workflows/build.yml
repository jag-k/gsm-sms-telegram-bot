name: Build and deploy to GitHub Container Registry

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Get info
        id: info
        run: |
          json_output=$(uvx --quiet hatch --quiet project metadata)
          echo "version=$(echo $json_output | jq -r '.version')" >> $GITHUB_OUTPUT
          echo "license=$(echo $json_output | jq -r '.license')" >> $GITHUB_OUTPUT
          echo "description=$(echo $json_output | jq -r '.description')" >> $GITHUB_OUTPUT
          echo "created_at=$(date +%Y-%m-%dT%H:%M:%S.%NZ)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.info.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PYTHON_VERSION=3.13
            LOGFIRE__REVISION=${{ github.ref_name }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.created=${{ steps.info.outputs.created_at }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.version=${{ steps.info.outputs.version }}
            org.opencontainers.image.licenses=${{ steps.info.outputs.license }}
            org.opencontainers.image.description=${{ steps.info.outputs.description }}
